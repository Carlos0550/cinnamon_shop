// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum ProductState {
  active
  inactive
  draft
  out_stock
  discontinued
  archived
  deleted
}

enum PromoType {
  percentage
  fixed //monto fijo
}

model User {
  id             Int      @id @default(autoincrement())
  email          String   @unique
  password       String
  name           String
  is_active      Boolean  @default(true)
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
  role           Int      @default(2)
  created_promos Promos[] @relation("PromosCreatedBy")
}

model Categories {
  id         String     @id @default(cuid())
  title      String
  image      String?
  is_active  Boolean    @default(true)
  created_at DateTime   @default(now())
  products   Products[]
  promos     Promos[]
}

model Products {
  id          String       @id @default(cuid())
  title       String
  price       Float        @default(0.00)
  description String
  is_active   Boolean      @default(true)
  state       ProductState @default(active)
  created_at  DateTime     @default(now())
  images      Json         @default("[]")
  categoryId  String?
  tags        Json?        @default("[]")
  stock       Int          @default(1)
  category    Categories?  @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  promos      Promos[]
}

model Promos {
  id               String       @id @default(cuid())
  code             String?      @unique
  title            String
  description      String?
  image            String?
  type             PromoType
  value            Float
  max_discount     Float?
  min_order_amount Float?
  start_date       DateTime?
  end_date         DateTime?
  is_active        Boolean      @default(true)
  usage_limit      Int?
  usage_count      Int          @default(0)
  per_user_limit   Int?
  categories       Categories[]
  products         Products[]
  all_products     Boolean      @default(false)
  all_categories   Boolean      @default(false)
  show_in_home     Boolean      @default(false)
  created_at       DateTime     @default(now())
  updated_at       DateTime     @updatedAt
  createdById      Int?
  created_by       User?        @relation("PromosCreatedBy", fields: [createdById], references: [id])
}
